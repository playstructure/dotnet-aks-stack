  name: Initialize Stack

  on:
    workflow_dispatch:

  jobs:
    stack-initialization:
      runs-on: ubuntu-latest
      outputs:
        generated_code_sha: ${{ steps.get_generated_code_sha.outputs.generated_code_sha }}
      steps:

        - name: checkout
          uses: actions/checkout@v2
          with:
            persist-credentials: false

        - name: Configure git
          run: |
            git config --global user.email "${{ github.actor }}@users.noreply.github.com"
            git config --global user.name "${{ github.actor }}"
            git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            
        - name: Generate code
          run: |
            dotnet new webapi --force

        - name: Perform name replacements in code
          run: |
            sed -i "s/sample-dotnet/${GITHUB_REPOSITORY#*/}/g" Dockerfile

        - name: Perform name replacements in k8s manifest contents and filenames
          working-directory: .playstructure/kubernetes
          run: |
            find . -type f -exec sed -i "s/sample-dotnet/${GITHUB_REPOSITORY#*/}/g" {} +
            mv ./common/deployment/sample-dotnet-api-server.yml ./common/deployment/${GITHUB_REPOSITORY#*/}-api-server.yml
            mv ./common/service/sample-dotnet-service.yml ./common/service/${GITHUB_REPOSITORY#*/}-service.yml
            mv ./common/ingress/sample-dotnet-ingress.yml ./common/ingress/${GITHUB_REPOSITORY#*/}-ingress.yml

        - name: Commit generated code and initialize workflows
          run: |
            git add .
            git commit -m "Generate framework code and initialize workflows"
            git push
        
        - name: Record SHA for initial build/deploy
          run: echo "::set-output name=generated_code_sha::$(git rev-parse HEAD)"
          id: get_generated_code_sha

    first-build:
      needs: [ stack-initialization ]
      uses: playstructure/workflows/.github/workflows/docker_build_publish.yml@main
      with:
        checkout_ref: ${{ needs.stack-initialization.outputs.generated_code_sha }}
      secrets:
        azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
        azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
        azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        azure_registry: ${{ secrets.AZURE_REGISTRY }}

    first-deploy:
      needs: [ stack-initialization, first-build ]
      uses: playstructure/workflows/.github/workflows/deploy.yml@main
      with:
        cluster_resource_group: zarenner-stamp1
        cluster_name: zarenner-stamp1-cluster
        deploy_environment: production
        sha: ${{ needs.stack-initialization.outputs.generated_code_sha }} # ${{ github.event.workflow_run.head_sha }}
      secrets:
        azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
        azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
        azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        azure_registry: ${{ secrets.AZURE_REGISTRY }}